name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
env:
  PYTHON_VERSION: "3.12"
  COMPOSE_FILE: docker-compose.yml

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
      - uses: docker/setup-buildx-action@v1
        with:
          python-version: "3.12"

      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt
      - run: pip install ruff

      - run: ruff check . --output-format=github

      - run: |
          echo "POSTGRES_USER=$(head /dev/urandom | tr -dc A-Za-z | head -c 8)" > .env
          echo "POSTGRES_PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16)" >> .env
          echo "POSTGRES_DB_AUTH=auth" >> .env
          echo "POSTGRES_DB_UNIVERSITY=university" >> .env
          echo "AUTH_SERVICE_INTERNAL_URL=http://auth:8000" >> .env
          echo "AUTH_SERVICE_API_URL=http://127.0.0.1:8000" >> .env
          echo "UNIVERSITY_SERVICE_INTERNAL_URL=http://university:8000" >> .env
          echo "UNIVERSITY_SERVICE_API_URL=http://127.0.0.1:8001" >> .env

      - run: docker compose up -d
      - run: docker build -t test-image:latest .

      # Установка Allure CLI
      - name: Установить Allure CLI
        run: |
          wget -O allure.zip https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.zip
          unzip -o allure.zip -d /opt/
          sudo ln -s /opt/allure-2.24.0/bin/allure /usr/local/bin/allure
          allure --version

      # Запуск тестов внутри контейнера (предположим, что ваши тесты генерируют allure-results)
      - name: Запуск тестов
        run: |
          docker run --rm \
            --network host \
            -v $(pwd):/app \
            --workdir /app \
            --env-file .env \
            test-image:latest \
            /bin/bash -c "pytest --alluredir=allure-results" # или ваша команда запуска тестов

      # Генерация отчета Allure
      - name: Генерация отчета Allure
        run: |
          allure generate allure-results -o allure-report --clean

      # Публикация отчета, даже при ошибках
      - name: Публикация отчета
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages



