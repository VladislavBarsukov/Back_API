name: CI

on:
  pull_request:
    branches: ["main"]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # --- Шаги для Ruff линтера (как и раньше) ---
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Run Ruff linter
        run: ruff check back_api tests utils

      # --- Шаги для Docker Compose (как и раньше) ---
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose
      - name: Start Docker Compose
        run: docker-compose up -d

      - name: Wait for API to be ready (Healthcheck)
        run: |
          # Ожидаем пока сервисы auth и university станут здоровыми
          while ! curl -f http://localhost:8000/health; do
            sleep 2
            echo "Waiting for auth service...";
          done
          while ! curl -f http://localhost:8001/health; do
            sleep 2
            echo "Waiting for university service...";
          done

      # --- Шаги для запуска тестов ---
      - name: Run tests (inside API container)
        run: docker exec -w /app auth pytest tests --alluredir=/app/allure-results

      # --- Шаги для генерации и публикации Allure отчета ---
      - name: Generate Allure Report
        if: always()
        run: docker exec -w /app auth allure generate --clean /app/allure-results -o /app/allure-report

      - name: Deploy to Github Pages
        if: always()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: /app/allure-report  # Путь к сгенерированному отчету внутри контейнера
          branch: gh-pages
          clean: true