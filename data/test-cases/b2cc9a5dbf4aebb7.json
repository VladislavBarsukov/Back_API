{"uid":"b2cc9a5dbf4aebb7","name":"test_create_group_anonym","fullName":"tests.test_create_group_contract.TestCreateGroupContract#test_create_group_anonym","historyId":"26db3c63bc224dbf0939ccc1d4b35c60","time":{"start":1756849201286,"stop":1756849201295,"duration":9},"status":"failed","statusMessage":"AssertionError: Wrong status code, Actual: '403', expected 401\nassert 403 == 401\n +  where 403 = <Response [403]>.status_code\n +  and   401 = <lookup 'status_codes'>.unauthorized\n +    where <lookup 'status_codes'> = <module 'requests.status_codes' from '/usr/local/lib/python3.12/site-packages/requests/status_codes.py'>.codes\n +      where <module 'requests.status_codes' from '/usr/local/lib/python3.12/site-packages/requests/status_codes.py'> = requests.status_codes","statusTrace":"self = <back_api.tests.test_create_group_contract.TestCreateGroupContract object at 0x7f80ce767f20>\nuniversity_api_utils_anonym = <back_api.utils.api_utils.ApiUtils object at 0x7f80ce75fce0>\n\n    def test_create_group_anonym(self, university_api_utils_anonym):\n        group_helper = GroupHelper(api_utils=university_api_utils_anonym)\n        response = group_helper.post_group({\"name\": faker.name()})\n>       assert (\n            response.status_code == requests.status_codes.codes.unauthorized\n        ), f\"Wrong status code, Actual: '{response.status_code}', expected {requests.status_codes.codes.unauthorized}\"\nE       AssertionError: Wrong status code, Actual: '403', expected 401\nE       assert 403 == 401\nE        +  where 403 = <Response [403]>.status_code\nE        +  and   401 = <lookup 'status_codes'>.unauthorized\nE        +    where <lookup 'status_codes'> = <module 'requests.status_codes' from '/usr/local/lib/python3.12/site-packages/requests/status_codes.py'>.codes\nE        +      where <module 'requests.status_codes' from '/usr/local/lib/python3.12/site-packages/requests/status_codes.py'> = requests.status_codes\n\ntests/test_create_group_contract.py:12: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756849201281,"stop":1756849201282,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_service_readiness","time":{"start":1756849201282,"stop":1756849201286,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"university_api_utils_anonym","time":{"start":1756849201286,"stop":1756849201286,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Wrong status code, Actual: '403', expected 401\nassert 403 == 401\n +  where 403 = <Response [403]>.status_code\n +  and   401 = <lookup 'status_codes'>.unauthorized\n +    where <lookup 'status_codes'> = <module 'requests.status_codes' from '/usr/local/lib/python3.12/site-packages/requests/status_codes.py'>.codes\n +      where <module 'requests.status_codes' from '/usr/local/lib/python3.12/site-packages/requests/status_codes.py'> = requests.status_codes","statusTrace":"self = <back_api.tests.test_create_group_contract.TestCreateGroupContract object at 0x7f80ce767f20>\nuniversity_api_utils_anonym = <back_api.utils.api_utils.ApiUtils object at 0x7f80ce75fce0>\n\n    def test_create_group_anonym(self, university_api_utils_anonym):\n        group_helper = GroupHelper(api_utils=university_api_utils_anonym)\n        response = group_helper.post_group({\"name\": faker.name()})\n>       assert (\n            response.status_code == requests.status_codes.codes.unauthorized\n        ), f\"Wrong status code, Actual: '{response.status_code}', expected {requests.status_codes.codes.unauthorized}\"\nE       AssertionError: Wrong status code, Actual: '403', expected 401\nE       assert 403 == 401\nE        +  where 403 = <Response [403]>.status_code\nE        +  and   401 = <lookup 'status_codes'>.unauthorized\nE        +    where <lookup 'status_codes'> = <module 'requests.status_codes' from '/usr/local/lib/python3.12/site-packages/requests/status_codes.py'>.codes\nE        +      where <module 'requests.status_codes' from '/usr/local/lib/python3.12/site-packages/requests/status_codes.py'> = requests.status_codes\n\ntests/test_create_group_contract.py:12: AssertionError","steps":[],"attachments":[{"uid":"1b58a813fdf49a66","name":"log","source":"1b58a813fdf49a66.txt","type":"text/plain","size":401}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_create_group_contract"},{"name":"subSuite","value":"TestCreateGroupContract"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_create_group_contract"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"b2cc9a5dbf4aebb7.json","parameterValues":[]}